# Copyright 2022 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

load("@rules_cc//cc:defs.bzl", "cc_library", "cc_test")

package(default_visibility = ["//src:scp_internal_pkg"])

cc_library(
    name = "errors",
    hdrs = ["error_codes.h"],
    deps = [
        "//src/core/interface:errors",
    ],
)

cc_library(
    name = "http2_client",
    srcs = [
        "aws/aws_v4_signer.cc",
        "http2_client.cc",
        "http_connection.cc",
        "http_connection_pool.cc",
    ],
    hdrs = [
        "aws/aws_v4_signer.h",
        "http2_client.h",
        "http_connection.h",
        "http_connection_pool.h",
    ],
    deps = [
        ":errors",
        "//src/core/common/concurrent_map",
        "//src/core/common/operation_dispatcher",
        "//src/core/interface",
        "//src/core/interface:async_context",
        "//src/core/utils:core_utils",
        "//src/public/core/interface:execution_result",
        "@boost//:asio_ssl",
        "@boost//:system",
        "@com_github_nghttp2_nghttp2//:nghttp2",
        "@com_github_nghttp2_nghttp2//:nghttp2_asio",
        "@com_google_absl//absl/functional:bind_front",
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/synchronization",
        "@com_google_absl//absl/time",
    ],
)

cc_test(
    name = "http2_client_test",
    size = "small",
    timeout = "moderate",
    srcs = ["http2_client_test.cc"],
    deps = [
        ":http2_client",
        "//src/core/async_executor/mock:core_async_executor_mock",
        "//src/core/http2_client/mock:http2_client_mock",
        "//src/core/interface",
        "//src/core/test/utils",
        "//src/public/core:test_execution_result_matchers",
        "//src/public/core/interface:execution_result",
        "@com_github_nghttp2_nghttp2//:nghttp2",
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/synchronization",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_test(
    name = "http2_connection_test",
    size = "small",
    timeout = "moderate",
    srcs = ["http2_connection_test.cc"],
    deps = [
        ":http2_client",
        "//src/core/async_executor/mock:core_async_executor_mock",
        "//src/core/http2_client/mock:http2_client_mock",
        "//src/core/interface",
        "//src/core/test/utils",
        "//src/public/core:test_execution_result_matchers",
        "//src/public/core/interface:execution_result",
        "@com_github_nghttp2_nghttp2//:nghttp2",
        "@com_google_absl//absl/synchronization",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_test(
    name = "http2_connection_pool_test",
    size = "small",
    srcs = ["http2_connection_pool_test.cc"],
    deps = [
        ":http2_client",
        "//src/core/async_executor/mock:core_async_executor_mock",
        "//src/core/http2_client/mock:http2_client_mock",
        "//src/core/interface",
        "//src/core/test/utils",
        "//src/public/core:test_execution_result_matchers",
        "//src/public/core/interface:execution_result",
        "@com_github_nghttp2_nghttp2//:nghttp2",
        "@com_google_absl//absl/synchronization",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_test(
    name = "aws_v4_signer_test",
    size = "small",
    srcs = ["aws/aws_v4_signer_test.cc"],
    deps = [
        ":http2_client",
        "//src/core/interface",
        "//src/core/test/utils",
        "//src/public/core:test_execution_result_matchers",
        "//src/public/core/interface:execution_result",
        "@com_github_nghttp2_nghttp2//:nghttp2",
        "@com_google_googletest//:gtest_main",
    ],
)
