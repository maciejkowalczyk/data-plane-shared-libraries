# Copyright 2023 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

load("@rules_buf//buf:defs.bzl", "buf_lint_test")
load("@rules_cc//cc:defs.bzl", "cc_library", "cc_proto_library", "cc_test")
load("@rules_proto//proto:defs.bzl", "proto_library")

package(default_visibility = [
    "//src/roma/byob:__subpackages__",
    "//src/roma/native_function_grpc_server:__subpackages__",
    "//src/roma/roma_service:__subpackages__",
    "//src/roma/sandbox/js_engine/v8_engine:__subpackages__",
    "//src/roma/sandbox/worker_api/sapi:__subpackages__",
])

proto_library(
    name = "rpc_wrapper_proto",
    srcs = ["rpc_wrapper.proto"],
    deps = ["//src/roma/interface:function_binding_io_proto"],
)

buf_lint_test(
    name = "rpc_wrapper_proto_lint",
    size = "small",
    config = "//src:buf.yaml",
    targets = [":rpc_wrapper_proto"],
)

cc_proto_library(
    name = "rpc_wrapper_cc_proto",
    deps = [":rpc_wrapper_proto"],
)

alias(
    name = "native_function_binding",
    actual = ":native_function_invoker",
)

cc_library(
    name = "native_function_handler",
    hdrs = ["native_function_handler.h"],
    defines = select({
        "//:non_sapi_build": ["NON_SAPI_BUILD"],
        "//conditions:default": [],
    }),
    deps = select({
        "//:non_sapi_build": [":native_function_handler_non_sapi"],
        "//conditions:default": [":native_function_handler_sapi_ipc"],
    }),
)

cc_library(
    name = "native_function_invoker",
    srcs = select({
        "//:non_sapi_build": ["native_function_invoker_non_sapi.cc"],
        "//conditions:default": ["native_function_invoker_sapi_ipc.cc"],
    }),
    hdrs = ["native_function_invoker.h"],
    deps = [
        ":rpc_wrapper_cc_proto",
        "//src/roma/sandbox/constants",
        "@com_google_absl//absl/status",
        "@com_google_sandboxed_api//sandboxed_api/sandbox2:comms",
    ],
)

cc_library(
    name = "native_function_table",
    hdrs = [
        "native_function_table.h",
    ],
    deps = [
        "//src/roma/config",
        "//src/roma/config:function_binding_object_v2",
        "//src/roma/interface:function_binding_io_cc_proto",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/synchronization",
    ],
)

cc_library(
    name = "native_function_handler_sapi_ipc",
    hdrs = [
        "native_function_handler_sapi_ipc.h",
    ],
    deps = [
        ":native_function_table",
        ":rpc_wrapper_cc_proto",
        "//src/roma/interface",
        "//src/roma/logging",
        "//src/roma/metadata_storage",
        "//src/roma/sandbox/constants",
        "//src/util:execution_token",
        "@com_google_sandboxed_api//sandboxed_api/sandbox2:comms",
    ],
)

cc_library(
    name = "native_function_handler_non_sapi",
    hdrs = [
        "native_function_handler_non_sapi.h",
    ],
    deps = [
        ":native_function_table",
        ":rpc_wrapper_cc_proto",
        "//src/roma/interface",
        "//src/roma/logging",
        "//src/roma/metadata_storage",
        "//src/roma/sandbox/constants",
        "//src/util:execution_token",
    ],
)

cc_test(
    name = "native_function_handler_sapi_ipc_test",
    size = "small",
    srcs = ["native_function_handler_sapi_ipc_test.cc"],
    target_compatible_with = select({
        "//:non_sapi_build": ["@platforms//:incompatible"],
        "//conditions:default": [],
    }),
    deps = [
        ":native_function_handler_sapi_ipc",
        ":native_function_table",
        ":rpc_wrapper_cc_proto",
        "//src/roma/metadata_storage",
        "@com_google_googletest//:gtest_main",
        "@com_google_sandboxed_api//sandboxed_api/sandbox2:comms",
    ],
)

cc_test(
    name = "native_function_handler_non_sapi_test",
    size = "small",
    srcs = ["native_function_handler_non_sapi_test.cc"],
    target_compatible_with = select({
        "//:non_sapi_build": [],
        "//conditions:default": ["@platforms//:incompatible"],
    }),
    deps = [
        ":native_function_handler_non_sapi",
        ":native_function_table",
        ":rpc_wrapper_cc_proto",
        "//src/roma/metadata_storage",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_test(
    name = "native_function_invoker_sapi_ipc_test",
    size = "small",
    srcs = ["native_function_invoker_sapi_ipc_test.cc"],
    target_compatible_with = select({
        "//:non_sapi_build": ["@platforms//:incompatible"],
        "//conditions:default": [],
    }),
    deps = [
        ":native_function_invoker",
        ":rpc_wrapper_cc_proto",
        "@com_google_googletest//:gtest_main",
        "@com_google_sandboxed_api//sandboxed_api/sandbox2:comms",
    ],
)

cc_test(
    name = "native_function_invoker_non_sapi_test",
    size = "small",
    srcs = ["native_function_invoker_non_sapi_test.cc"],
    target_compatible_with = select({
        "//:non_sapi_build": [],
        "//conditions:default": ["@platforms//:incompatible"],
    }),
    deps = [
        ":native_function_invoker",
        ":rpc_wrapper_cc_proto",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_test(
    name = "native_function_table_test",
    size = "small",
    srcs = ["native_function_table_test.cc"],
    deps = [
        ":native_function_table",
        "@com_google_absl//absl/status",
        "@com_google_googletest//:gtest_main",
    ],
)
