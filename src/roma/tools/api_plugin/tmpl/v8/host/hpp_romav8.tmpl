/**
 * This file is @generated by
 * src/roma/tools/api_plugin/tmpl/v8/host/hpp_romav8.tmpl. Do not edit.
 * Version: {{getVersion}}
 * Code Generator: {{getRomaGenerator}}
*/

/*
 * Copyright 2023 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

{{range $file := .Files}}
{{- $svcGuard := "" }}
{{with index .Services 0}}
{{- $svcopts := index .Options "privacysandbox.apis.roma.app_api.v1.roma_svc_annotation"}}
{{- $svcGuard = $svcopts.RomaAppName | upper }}
{{end}}

{{- $defineGuard := $file.Package | printf "%s_%s_HOST" $svcGuard | replace "." "_" | upper}}
#ifndef {{$defineGuard}}
#define {{$defineGuard}}

{{- $filePath := $file.Name | trimSuffix (ext $file.Name)}}
#include "{{$filePath}}.pb.h"
#include "{{$filePath}}_native_request_handler.h"

#include "absl/status/status.h"
#include "absl/strings/str_cat.h"
#include "absl/synchronization/notification.h"
#include "src/roma/config/config.h"
#include "src/roma/config/function_binding_object_v2.h"

{{range $svc := .Services}}
{{- $svcopts := index $svc.Options "privacysandbox.apis.roma.app_api.v1.roma_svc_annotation"}}

using google::scp::roma::Config;
using google::scp::roma::FunctionBindingObjectV2;

namespace {{$svcopts.CppNamespace}} {

template <typename TMetadata>
void RegisterHostApi(Config<TMetadata>& config) {
  {{- range $rpc := .MethodsWithOption "privacysandbox.apis.roma.app_api.v1.roma_rpc_annotation"}}
  config.RegisterFunctionBinding(
    std::make_unique<FunctionBindingObjectV2<TMetadata>>(FunctionBindingObjectV2<TMetadata>{
        .function_name = "{{$svcopts.RomaAppName}}.{{$rpc.Name}}",
        .function = {{$rpc.Name}}FunctionBinding<TMetadata>,
    }));
  {{end}}{{/*rpc range*/}}
}

}  // namespace {{$svcopts.CppNamespace}}
{{end}}{{/*svc range*/}}

#endif  // {{$defineGuard}}
{{end}}{{/*file range*/}}
