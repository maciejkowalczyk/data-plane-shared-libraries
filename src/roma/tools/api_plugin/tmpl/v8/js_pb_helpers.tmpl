/**
 * This file is @generated by
 * src/roma/tools/api_plugin/tmpl/v8/js_pb_helpers.tmpl. Do not edit.
 * Version: {{getVersion}}
 * Code Generator: {{getRomaGenerator}}
*/

/*
 * Copyright 2023 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

 /**
  * Protobuf helper functions for the Roma App API.
  * externs
  */

{{- range $file := .Files}}
{{- $proto_basename := base $file.Name | trimSuffix (ext $file.Name)}}
goog.require('jspb.BinaryWriter');

{{- range $enum := $file.Enums}}
const {{$enum.LongName}} = Number;
{{- end}}

{{- range $msg := $file.Messages}}
{{- $msgFullName := $msg.FullName | printf "proto.%s" }}
goog.require('{{$msgFullName}}');

const {{$msg.LongName}} = class {
  constructor(obj) {
    this.obj = obj;
  }

{{- /*create get<Field>() functions for each non-repeated protobuf field*/}}
{{- /*create get<Field>List() functions for each repeated protobuf field*/}}
{{- range $fld := $msg.Fields}}
  {{- $fldIsMessage := contains "." $fld.FullType}}
  {{- $fldObjAccessor := $fld.Name | printf "this.obj.%s"}}
  {{- $fldMsgWrapper := printf "new %s(%s)" $fld.LongType $fldObjAccessor}}
  {{- $fldAccessor := $fldIsMessage | ternary $fldMsgWrapper $fldObjAccessor}}
  {{- $fldName := $fld.Name | camelcase}}
  {{- if eq $fld.Label "repeated"}}
  get{{$fldName}}List() {
    if (!(this.obj && {{$fldObjAccessor}})) {
      return [];
    }
    {{- if $fldIsMessage}}
    return {{$fldObjAccessor}}.map((x) => {{ $fld.LongType | printf "new %s(x)"}});
    {{- else}}
    return {{$fldAccessor}};
    {{- end}}
  }
  {{- else if eq $fld.LongType "bytes"}}
  get{{$fldName}}_asU8() {
    return (this.obj && {{$fldObjAccessor}}) || '';
  }
  {{- else}}
  get{{$fldName}}() {
    return (this.obj && {{$fldAccessor}}) || {{$fldIsMessage | ternary "null" "''"}};
  }
  {{- end}}
{{- end}}{{/*msg.Fields*/}}

  static serializeObject(obj) {
    const writer = new jspb.BinaryWriter();
    const wrapped_obj = new {{$msg.LongName}}(obj);
    /** @suppress {checkTypes} */
    {{$msgFullName}}.serializeBinaryToWriter(wrapped_obj, writer);
    return String.fromCharCode(...writer.getResultBuffer());
  }
};
{{- end}}{{/*msg range*/}}

{{- range $svc := $file.Services}}
{{- $svcopts := index $svc.Options "privacysandbox.apis.roma.app_api.v1.roma_svc_annotation"}}
{{- $appPb := $svcopts.RomaAppName | printf "%sPb" }}

/*
 * service: {{$svc.FullName}}
 * romav8 app: {{$svcopts.RomaAppName}}
 */
/** @suppress {duplicate} */
var {{$appPb}} = {
{{- range $rpc := $svc.MethodsWithOption "privacysandbox.apis.roma.app_api.v1.roma_rpc_annotation"}}
{{- $reqFullType := $rpc.RequestFullType | printf "proto.%s" }}
{{- $respFullType := $rpc.ResponseFullType | printf "proto.%s" }}

{{- $pbTypes := chunk 2 (list $rpc.RequestType $reqFullType $rpc.ResponseType $respFullType) }}
{{- range $pbT := $pbTypes }}
{{- $pbType := first $pbT }}
{{- $pbFullType := last $pbT }}

  {{$pbType}}: {{$pbType}},

  ProtoBytesToMessage_{{$pbType}}(pbStr) {
    const pbArr = pbStr.split('').reduce((acc, next) => [...acc, next.charCodeAt(0)], [])
    return {{$pbFullType}}.deserializeBinary(pbArr);
  },

  ProtoBytesToObject_{{$pbType}}(pbStr) {
    return this.ProtoBytesToMessage_{{$pbType}}(pbStr).toObject();
  },

  ObjectToProtoBytes_{{$pbType}}(obj) {
    return {{$pbType}}.serializeObject(obj);
  },

{{- end -}}{{/*rpc request/response range*/}}
{{- end -}}{{/*rpc range*/}}
};

{{- end -}}{{/*svc range*/}}
{{- end -}}{{/*file range*/}}
