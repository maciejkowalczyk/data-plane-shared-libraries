diff --git a/accounting/BUILD b/accounting/BUILD
index 41f88ab..3ddc354 100644
--- a/accounting/BUILD
+++ b/accounting/BUILD
@@ -39,7 +39,8 @@ cc_library(
     deps = [
         ":convolution",
         "//accounting/common",
-        "//base:logging",
+        "@com_google_absl//absl/log:log",
+        "@com_google_absl//absl/log:check",
         "@boost//:lexical_cast",
         "@boost//:math",
         "@boost//:multiprecision",
diff --git a/accounting/privacy_loss_mechanism.h b/accounting/privacy_loss_mechanism.h
index 88c2223..b787009 100644
--- a/accounting/privacy_loss_mechanism.h
+++ b/accounting/privacy_loss_mechanism.h
@@ -15,7 +15,8 @@
 #ifndef DIFFERENTIAL_PRIVACY_ACCOUNTING_PRIVACY_LOSS_MECHANISM_H_
 #define DIFFERENTIAL_PRIVACY_ACCOUNTING_PRIVACY_LOSS_MECHANISM_H_

-#include "base/logging.h"
+#include "absl/log/log.h"
+#include "absl/log/check.h"
 #include "absl/status/status.h"
 #include "absl/status/statusor.h"
 #include "absl/types/optional.h"
diff --git a/algorithms/BUILD b/algorithms/BUILD
index a662d14..51b0c5e 100644
--- a/algorithms/BUILD
+++ b/algorithms/BUILD
@@ -26,7 +26,8 @@ cc_library(
     deps = [
         ":numerical-mechanisms",
         ":util",
-        "//base:logging",
+        "@com_google_absl//absl/log:log",
+        "@com_google_absl//absl/log:check",
         "//proto:util-lib",
         "@com_google_absl//absl/memory",
         "@com_google_absl//absl/status",
@@ -147,7 +148,8 @@ cc_library(
         ":bounded-algorithm",
         ":numerical-mechanisms",
         ":util",
-        "//base:logging",
+        "@com_google_absl//absl/log:log",
+        "@com_google_absl//absl/log:check",
         "//proto:util-lib",
         "@com_google_absl//absl/memory",
         "@com_google_absl//absl/status",
@@ -190,7 +192,8 @@ cc_library(
         ":numerical-mechanisms",
         ":util",
         "//algorithms/internal:bounded-mean-ci",
-        "//base:logging",
+        "@com_google_absl//absl/log:log",
+        "@com_google_absl//absl/log:check",
         "//proto:util-lib",
         "@com_google_absl//absl/memory",
         "@com_google_absl//absl/status",
@@ -213,7 +216,8 @@ cc_test(
         ":bounded-mean",
         ":numerical-mechanisms",
         ":numerical-mechanisms-testing",
-        "//base:logging",
+        "@com_google_absl//absl/log:log",
+        "@com_google_absl//absl/log:check",
         "//base/testing:proto_matchers",
         "//base/testing:status_matchers",
         "//proto:util-lib",
@@ -253,7 +257,8 @@ cc_library(
         ":bounded-algorithm",
         ":numerical-mechanisms",
         ":util",
-        "//base:logging",
+        "@com_google_absl//absl/log:log",
+        "@com_google_absl//absl/log:check",
         "//proto:util-lib",
         "@com_google_absl//absl/memory",
         "@com_google_absl//absl/status",
@@ -274,7 +279,8 @@ cc_test(
         ":bounded-variance",
         ":numerical-mechanisms",
         ":numerical-mechanisms-testing",
-        "//base:logging",
+        "@com_google_absl//absl/log:log",
+        "@com_google_absl//absl/log:check",
         "//base/testing:proto_matchers",
         "//base/testing:status_matchers",
         "//proto:util-lib",
@@ -299,7 +305,8 @@ cc_library(
         ":bounded-variance",
         ":numerical-mechanisms",
         ":util",
-        "//base:logging",
+        "@com_google_absl//absl/log:log",
+        "@com_google_absl//absl/log:check",
         "//proto:util-lib",
         "@com_google_absl//absl/memory",
         "@com_google_absl//absl/status",
@@ -335,7 +342,8 @@ cc_library(
         ":algorithm",
         ":numerical-mechanisms",
         ":util",
-        "//base:logging",
+        "@com_google_absl//absl/log:log",
+        "@com_google_absl//absl/log:check",
         "//proto:util-lib",
         "@com_google_absl//absl/memory",
         "@com_google_absl//absl/status",
@@ -355,7 +363,8 @@ cc_test(
         ":count",
         ":numerical-mechanisms",
         ":numerical-mechanisms-testing",
-        "//base:logging",
+        "@com_google_absl//absl/log:log",
+        "@com_google_absl//absl/log:check",
         "//base/testing:proto_matchers",
         "//base/testing:status_matchers",
         "//proto:util-lib",
@@ -378,7 +387,8 @@ cc_library(
         "//testing:__pkg__",
     ],
     deps = [
-        "//base:logging",
+        "@com_google_absl//absl/log:log",
+        "@com_google_absl//absl/log:check",
         "@com_google_absl//absl/base:core_headers",
         "@com_google_absl//absl/status",
         "@com_google_absl//absl/status:statusor",
@@ -409,7 +419,8 @@ cc_library(
     deps = [
         ":rand",
         ":util",
-        "//base:logging",
+        "@com_google_absl//absl/log:log",
+        "@com_google_absl//absl/log:check",
         "@com_google_absl//absl/memory",
         "@com_google_absl//absl/random",
         "@com_google_absl//absl/status",
@@ -446,7 +457,8 @@ cc_library(
         ":rand",
         ":util",
         "//algorithms/internal:gaussian-stddev-calculator",
-        "//base:logging",
+        "@com_google_absl//absl/log:log",
+        "@com_google_absl//absl/log:check",
         "@com_google_absl//absl/base:core_headers",
         "@com_google_absl//absl/memory",
         "@com_google_absl//absl/status",
@@ -480,7 +492,8 @@ cc_library(
     deps = [
         ":distributions",
         ":numerical-mechanisms",
-        "//base:logging",
+        "@com_google_absl//absl/log:log",
+        "@com_google_absl//absl/log:check",
         "@com_google_absl//absl/memory",
         "@com_google_absl//absl/random",
         "@com_google_absl//absl/status:statusor",
@@ -507,7 +520,8 @@ cc_library(
         ":algorithm",
         ":numerical-mechanisms",
         ":util",
-        "//base:logging",
+        "@com_google_absl//absl/log:log",
+        "@com_google_absl//absl/log:check",
         "//proto:util-lib",
         "@com_google_absl//absl/memory",
         "@com_google_absl//absl/status",
@@ -568,7 +582,8 @@ cc_library(
         "//testing:__pkg__",
     ],
     deps = [
-        "//base:logging",
+        "@com_google_absl//absl/log:log",
+        "@com_google_absl//absl/log:check",
         "@boringssl//:crypto",
         "@com_google_absl//absl/base:core_headers",
         "@com_google_absl//absl/flags:flag",
@@ -719,7 +734,8 @@ cc_library(
     deps = [
         ":numerical-mechanisms",
         ":partition-selection",
-        "//base:logging",
+        "@com_google_absl//absl/log:log",
+        "@com_google_absl//absl/log:check",
         "@com_google_absl//absl/status:statusor",
         "@com_google_googletest//:gtest",
     ],
diff --git a/algorithms/algorithm.h b/algorithms/algorithm.h
index 028ffb7..a566d7a 100644
--- a/algorithms/algorithm.h
+++ b/algorithms/algorithm.h
@@ -25,7 +25,8 @@
 #include <utility>

 #include <cstdint>
-#include "base/logging.h"
+#include "absl/log/log.h"
+#include "absl/log/check.h"
 #include "absl/memory/memory.h"
 #include "absl/status/status.h"
 #include "absl/status/statusor.h"
diff --git a/algorithms/approx-bounds.h b/algorithms/approx-bounds.h
index 6141eb4..0ef0fae 100644
--- a/algorithms/approx-bounds.h
+++ b/algorithms/approx-bounds.h
@@ -109,8 +109,8 @@ class ApproxBounds : public Algorithm<T> {
   // Serialize the positive and negative bin counts.
   Summary Serialize() const override {
     ApproxBoundsSummary am_summary;
-    *am_summary.mutable_pos_bin_count() = {pos_bins_.begin(), pos_bins_.end()};
-    *am_summary.mutable_neg_bin_count() = {neg_bins_.begin(), neg_bins_.end()};
+    am_summary.mutable_pos_bin_count()->Assign(pos_bins_.begin(), pos_bins_.end());
+    am_summary.mutable_neg_bin_count()->Assign(neg_bins_.begin(), neg_bins_.end());
     Summary summary;
     summary.mutable_data()->PackFrom(am_summary);
     return summary;
diff --git a/algorithms/bounded-mean.h b/algorithms/bounded-mean.h
index a2d267e..4b5ec45 100644
--- a/algorithms/bounded-mean.h
+++ b/algorithms/bounded-mean.h
@@ -29,7 +29,8 @@
 #include <vector>

 #include <cstdint>
-#include "base/logging.h"
+#include "absl/log/log.h"
+#include "absl/log/check.h"
 #include "google/protobuf/any.pb.h"
 #include "absl/memory/memory.h"
 #include "absl/status/status.h"
diff --git a/algorithms/bounded-mean_test.cc b/algorithms/bounded-mean_test.cc
index 02583f0..5ca0bf1 100644
--- a/algorithms/bounded-mean_test.cc
+++ b/algorithms/bounded-mean_test.cc
@@ -27,7 +27,8 @@
 #include <vector>

 #include <cstdint>
-#include "base/logging.h"
+#include "absl/log/log.h"
+#include "absl/log/check.h"
 #include "base/testing/proto_matchers.h"
 #include "base/testing/status_matchers.h"
 #include "gmock/gmock.h"
diff --git a/algorithms/bounded-sum.h b/algorithms/bounded-sum.h
index 258e257..fb226b0 100644
--- a/algorithms/bounded-sum.h
+++ b/algorithms/bounded-sum.h
@@ -30,7 +30,8 @@
 #include <vector>

 #include <cstdint>
-#include "base/logging.h"
+#include "absl/log/log.h"
+#include "absl/log/check.h"
 #include "google/protobuf/any.pb.h"
 #include "absl/memory/memory.h"
 #include "absl/status/status.h"
diff --git a/algorithms/bounded-variance.h b/algorithms/bounded-variance.h
index f3886e4..86ab8a0 100644
--- a/algorithms/bounded-variance.h
+++ b/algorithms/bounded-variance.h
@@ -29,7 +29,8 @@
 #include <vector>

 #include <cstdint>
-#include "base/logging.h"
+#include "absl/log/log.h"
+#include "absl/log/check.h"
 #include "google/protobuf/any.pb.h"
 #include "absl/memory/memory.h"
 #include "absl/status/status.h"
diff --git a/algorithms/bounded-variance_test.cc b/algorithms/bounded-variance_test.cc
index 07a1e2f..ab1d5e4 100644
--- a/algorithms/bounded-variance_test.cc
+++ b/algorithms/bounded-variance_test.cc
@@ -28,7 +28,8 @@
 #include <vector>

 #include <cstdint>
-#include "base/logging.h"
+#include "absl/log/log.h"
+#include "absl/log/check.h"
 #include "base/testing/proto_matchers.h"
 #include "base/testing/status_matchers.h"
 #include "gmock/gmock.h"
diff --git a/algorithms/internal/BUILD b/algorithms/internal/BUILD
index 3ec5360..c22b16a 100644
--- a/algorithms/internal/BUILD
+++ b/algorithms/internal/BUILD
@@ -57,7 +57,8 @@ cc_test(
     deps = [
         ":bounded-mean-ci",
         "//algorithms:numerical-mechanisms",
-        "//base:logging",
+        "@com_google_absl//absl/log:log",
+        "@com_google_absl//absl/log:check",
         "@com_google_absl//absl/status",
         "@com_google_absl//absl/status:statusor",
         "@com_google_differential_privacy//proto:confidence_interval_cc_proto",
diff --git a/algorithms/internal/bounded-mean-ci_test.cc b/algorithms/internal/bounded-mean-ci_test.cc
index bc4e545..d333ecd 100644
--- a/algorithms/internal/bounded-mean-ci_test.cc
+++ b/algorithms/internal/bounded-mean-ci_test.cc
@@ -20,7 +20,8 @@
 #include <memory>
 #include <utility>

-#include "base/logging.h"
+#include "absl/log/log.h"
+#include "absl/log/check.h"
 #include "gmock/gmock.h"
 #include "gtest/gtest.h"
 #include "absl/status/status.h"
diff --git a/algorithms/numerical-mechanisms.cc b/algorithms/numerical-mechanisms.cc
index e90b297..bc2629f 100644
--- a/algorithms/numerical-mechanisms.cc
+++ b/algorithms/numerical-mechanisms.cc
@@ -23,7 +23,8 @@
 #include <utility>

 #include <cstdint>
-#include "base/logging.h"
+#include "absl/log/log.h"
+#include "absl/log/check.h"
 #include "absl/memory/memory.h"
 #include "absl/status/status.h"
 #include "absl/status/statusor.h"
diff --git a/algorithms/rand.cc b/algorithms/rand.cc
index d3e01bc..b2866a7 100644
--- a/algorithms/rand.cc
+++ b/algorithms/rand.cc
@@ -22,7 +22,8 @@
 #include <cstring>
 #include <limits>

-#include "base/logging.h"
+#include "absl/log/log.h"
+#include "absl/log/check.h"
 #include "absl/numeric/bits.h"
 #include "absl/synchronization/mutex.h"
 #include "openssl/rand.h"
diff --git a/algorithms/util.h b/algorithms/util.h
index 21f4690..918961d 100644
--- a/algorithms/util.h
+++ b/algorithms/util.h
@@ -27,7 +27,8 @@
 #include <vector>

 #include <cstdint>
-#include "base/logging.h"
+#include "absl/log/log.h"
+#include "absl/log/check.h"
 #include "absl/base/attributes.h"
 #include "absl/status/status.h"
 #include "absl/status/statusor.h"
diff --git a/base/BUILD b/base/BUILD
index 776f86e..8944570 100644
--- a/base/BUILD
+++ b/base/BUILD
@@ -33,17 +33,6 @@ cc_library(
     ],
 )

-cc_library(
-    name = "logging",
-    srcs = ["logging.cc"],
-    hdrs = ["logging.h"],
-    deps = [
-        "@com_google_absl//absl/base",
-        "@com_google_absl//absl/base:core_headers",
-        "@com_google_absl//absl/base:log_severity",
-    ],
-)
-
 cc_library(
     name = "status",
     hdrs = [
diff --git a/base/logging.cc b/base/logging.cc
deleted file mode 100644
index 8cf2061..0000000
--- a/base/logging.cc
+++ /dev/null
@@ -1,306 +0,0 @@
-//
-// Copyright 2019 Google LLC
-// Copyright 2018 ZetaSQL Authors
-//
-// Licensed under the Apache License, Version 2.0 (the "License");
-// you may not use this file except in compliance with the License.
-// You may obtain a copy of the License at
-//
-//      http://www.apache.org/licenses/LICENSE-2.0
-//
-// Unless required by applicable law or agreed to in writing, software
-// distributed under the License is distributed on an "AS IS" BASIS,
-// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-// See the License for the specific language governing permissions and
-// limitations under the License.
-//
-
-#include "base/logging.h"
-
-#include <errno.h>
-#include <fcntl.h>
-#include <string.h>
-#include <sys/stat.h>
-#include <sys/types.h>
-#ifdef _WIN32
-// START PATCH
-// This `if` code block conditionally defines and imports windows system
-// specific code. This block defines the windows alternatives to the functions
-// defined in <unistd.h> which is included in the `else` section below.
-#include <Windows.h>
-#include <direct.h>  // for: _mkdir
-#include <io.h>      // for: access
-#include <time.h>    // for: timespec
-// By design Windows does not have a `mode` parameter.
-#undef mkdir
-#define mkdir(path, mode) _mkdir(path)
-
-#ifndef S_ISDIR
-#define S_ISDIR(mode) (((mode)&S_IFMT) == S_IFDIR)
-#endif
-
-#define W_OK 2
-#define F_OK 0
-#define CLOCK_REALTIME 0
-
-static int clock_gettime(int, struct timespec *spec)  // C-file part
-{
-  __int64 wintime;
-  GetSystemTimeAsFileTime((FILETIME *)&wintime);
-  wintime -= 116444736000000000i64;             // 1jan1601 to 1jan1970
-  spec->tv_sec = wintime / 10000000i64;         // seconds
-  spec->tv_nsec = wintime % 10000000i64 * 100;  // nano-seconds
-  return 0;
-}
-// END PATCH
-#else
-#include <unistd.h>
-#endif
-#include <cctype>
-#include <cstdio>
-#include <cstdlib>
-#include <ctime>
-#include <sstream>
-#include <string>
-
-#include "absl/base/attributes.h"
-
-namespace differential_privacy {
-namespace base {
-
-constexpr char kDefaultDirectory[] = "/tmp/";
-
-namespace {
-
-// The logging directory.
-ABSL_CONST_INIT std::string *log_file_directory = nullptr;
-
-// The log filename.
-ABSL_CONST_INIT std::string *log_basename = nullptr;
-
-// The VLOG level, only VLOG with level equal to or below this level is logged.
-ABSL_CONST_INIT int vlog_level = 0;
-
-const char *GetBasename(const char *file_path) {
-  const char *slash = strrchr(file_path, '/');
-  return slash ? slash + 1 : file_path;
-}
-
-bool set_log_basename(const std::string &filename) {
-  if (log_basename || filename.empty()) {
-    return false;
-  }
-  log_basename = new std::string(filename);
-  return true;
-}
-
-std::string get_log_basename() {
-  if (!log_basename || log_basename->empty()) {
-    return "zetasql";
-  }
-  return *log_basename;
-}
-
-bool EnsureDirectoryExists(const char *path) {
-  struct stat dirStat;
-  if (stat(path, &dirStat)) {
-    if (errno != ENOENT) {
-      return false;
-    }
-    if (mkdir(path, 0766)) {
-      return false;
-    }
-  } else if (!S_ISDIR(dirStat.st_mode)) {
-    return false;
-  }
-  return true;
-}
-
-// Sets the log directory, as specified when initialized. This
-// is only set once. Any request to reset it will return false.
-//
-// log_directory: log file directory.
-//
-// Returns true if and only if the log directory is set successfully.
-bool set_log_directory(const std::string &log_directory) {
-  std::string tmp_directory = log_directory;
-  if (tmp_directory.empty()) {
-    tmp_directory = kDefaultDirectory;
-  }
-  if (log_file_directory || !EnsureDirectoryExists(tmp_directory.c_str())) {
-    return false;
-  }
-  if (tmp_directory.back() == '/') {
-    log_file_directory = new std::string(tmp_directory);
-  } else {
-    log_file_directory = new std::string(tmp_directory + "/");
-  }
-  return true;
-}
-
-// Sets the verbosity threshold for VLOG. A VLOG command with a level greater
-// than this will be ignored.
-//
-// level: verbosity threshold for VLOG to be set. A VLOG command with
-//        level less than or equal to this will be logged.
-void set_vlog_level(int level) { vlog_level = level; }
-
-}  // namespace
-
-std::string get_log_directory() {
-  if (!log_file_directory) {
-    return kDefaultDirectory;
-  }
-  return *log_file_directory;
-}
-
-int get_vlog_level() { return vlog_level; }
-
-bool InitLogging(const char *directory, const char *file_name, int level) {
-  set_vlog_level(level);
-  std::string log_directory = directory ? std::string(directory) : "";
-  if (!set_log_directory(log_directory)) {
-    return false;
-  }
-  const char *binary_name = GetBasename(file_name);
-  if (!set_log_basename(binary_name)) {
-    return false;
-  }
-  std::string log_path = get_log_directory() + get_log_basename();
-  if (access(log_path.c_str(), F_OK) == 0 &&
-      access(log_path.c_str(), W_OK) != 0) {
-    return false;
-  }
-  return true;
-}
-
-
-CheckOpMessageBuilder::CheckOpMessageBuilder(const char *exprtext)
-    : stream_(new std::ostringstream) {
-  *stream_ << exprtext << " (";
-}
-
-CheckOpMessageBuilder::~CheckOpMessageBuilder() { delete stream_; }
-
-std::ostream *CheckOpMessageBuilder::ForVar2() {
-  *stream_ << " vs. ";
-  return stream_;
-}
-
-std::string *CheckOpMessageBuilder::NewString() {  // NOLINT
-  *stream_ << ")";
-  return new std::string(stream_->str());
-}
-
-template <>
-void MakeCheckOpValueString(std::ostream *os, const char &v) {
-  if (v >= 32 && v <= 126) {
-    (*os) << "'" << v << "'";
-  } else {
-    (*os) << "char value " << static_cast<int16_t>(v);
-  }
-}
-
-template <>
-void MakeCheckOpValueString(std::ostream *os, const signed char &v) {
-  if (v >= 32 && v <= 126) {
-    (*os) << "'" << v << "'";
-  } else {
-    (*os) << "signed char value " << static_cast<int16_t>(v);
-  }
-}
-
-template <>
-void MakeCheckOpValueString(std::ostream *os, const unsigned char &v) {
-  if (v >= 32 && v <= 126) {
-    (*os) << "'" << v << "'";
-  } else {
-    (*os) << "unsigned char value " << static_cast<uint16_t>(v);
-  }
-}
-
-template <>
-void MakeCheckOpValueString(std::ostream *os, const std::nullptr_t &v) {
-  (*os) << "nullptr";
-}
-
-namespace logging_internal {
-
-LogMessage::LogMessage(const char *file, int line)
-  : LogMessage(file, line, absl::LogSeverity::kInfo) {}
-
-LogMessage::LogMessage(const char *file, int line, const std::string &result)
-    : LogMessage(file, line, absl::LogSeverity::kFatal) {
-  stream() << "Check failed: " << result << " ";
-}
-
-static constexpr const char *LogSeverityNames[4] = {"INFO", "WARNING", "ERROR",
-                                                    "FATAL"};
-
-LogMessage::LogMessage(const char *file, int line, absl::LogSeverity severity)
-    : severity_(severity) {
-  const char *filename = GetBasename(file);
-
-  // Write a prefix into the log message, including local date/time, severity
-  // level, filename, and line number.
-  struct timespec time_stamp;
-  clock_gettime(CLOCK_REALTIME, &time_stamp);
-
-  constexpr int kTimeMessageSize = 22;
-  char buffer[kTimeMessageSize];
-  strftime(buffer, kTimeMessageSize, "%Y-%m-%d %H:%M:%S  ",
-           localtime(&time_stamp.tv_sec));
-  stream() << buffer;
-  stream() << LogSeverityNames[static_cast<int>(severity)] << "  "
-           << filename << " : " << line << " : ";
-}
-
-LogMessage::~LogMessage() {
-  Flush();
-  // if FATAL occurs, abort.
-  if (severity_ == absl::LogSeverity::kFatal) {
-    abort();
-  }
-}
-
-void LogMessage::SendToLog(const std::string &message_text) {
-  std::string log_path = get_log_directory() + get_log_basename();
-
-  FILE *file = fopen(log_path.c_str(), "ab");
-  if (file) {
-    if (fprintf(file, "%s", message_text.c_str()) > 0) {
-      if (message_text.back() != '\n') {
-        fprintf(file, "\n");
-      }
-    } else {
-      fprintf(stderr, "Failed to write to log file : %s! [%s]\n",
-              log_path.c_str(), strerror(errno));
-    }
-    fclose(file);
-  } else {
-    fprintf(stderr, "Failed to open log file : %s! [%s]\n",
-            log_path.c_str(), strerror(errno));
-  }
-  if (severity_ >= absl::LogSeverity::kError) {
-    fprintf(stderr, "%s\n", message_text.c_str());
-    fflush(stderr);
-  }
-  printf("%s\n", message_text.c_str());
-  fflush(stdout);
-}
-
-void LogMessage::Flush() {
-  std::string message_text = stream_.str();
-  SendToLog(message_text);
-  stream_.clear();
-}
-
-LogMessageFatal::~LogMessageFatal() {
-  Flush();
-  abort();
-}
-
-}  // namespace logging_internal
-
-}  // namespace base
-}  // namespace differential_privacy
diff --git a/base/logging.h b/base/logging.h
deleted file mode 100644
index 3c7c7d5..0000000
--- a/base/logging.h
+++ /dev/null
@@ -1,384 +0,0 @@
-//
-// Copyright 2019 Google LLC
-// Copyright 2018 ZetaSQL Authors
-// Copyright 2018 Asylo authors
-//
-// Licensed under the Apache License, Version 2.0 (the "License");
-// you may not use this file except in compliance with the License.
-// You may obtain a copy of the License at
-//
-//      http://www.apache.org/licenses/LICENSE-2.0
-//
-// Unless required by applicable law or agreed to in writing, software
-// distributed under the License is distributed on an "AS IS" BASIS,
-// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-// See the License for the specific language governing permissions and
-// limitations under the License.
-//
-
-#ifndef DIFFERENTIAL_PRIVACY_BASE_LOGGING_H_
-#define DIFFERENTIAL_PRIVACY_BASE_LOGGING_H_
-
-#include <cstddef>
-#include <cstdint>
-#include <cstdlib>
-#include <memory>
-#include <ostream>
-#include <sstream>
-#include <string>
-
-#include "absl/base/attributes.h"
-#include "absl/base/log_severity.h"
-
-#define DP_INTERNAL_LOGGING_INFO \
-  ::differential_privacy::base::logging_internal::LogMessage(__FILE__, __LINE__)
-#define DP_INTERNAL_LOGGING_WARNING                           \
-  ::differential_privacy::base::logging_internal::LogMessage( \
-      __FILE__, __LINE__, absl::LogSeverity::kWarning)
-#define DP_INTERNAL_LOGGING_ERROR                             \
-  ::differential_privacy::base::logging_internal::LogMessage( \
-      __FILE__, __LINE__, absl::LogSeverity::kError)
-#define DP_INTERNAL_LOGGING_FATAL                                           \
-  ::differential_privacy::base::logging_internal::LogMessageFatal(__FILE__, \
-                                                                  __LINE__)
-
-#define DP_INTERNAL_LOGGING_QFATAL DP_INTERNAL_LOGGING_FATAL
-
-#ifdef NDEBUG
-#define DP_INTERNAL_LOGGING_DFATAL DP_INTERNAL_LOGGING_ERROR
-#else
-#define DP_INTERNAL_LOGGING_DFATAL DP_INTERNAL_LOGGING_FATAL
-#endif
-
-#ifdef NDEBUG
-#define DP_DEBUG_MODE false
-#else
-#define DP_DEBUG_MODE true
-#endif
-
-// Creates a message and logs it to file.
-//
-// LOG(severity) returns a stream object that can be written to with the <<
-// operator. Log messages are emitted with terminating newlines.
-// Example:
-//   LOG(INFO) << "Found" << num_cookies << " cookies";
-//
-// severity: the severity of the log message, one of LogSeverity. The
-//           FATAL severity will terminate the program after the log is emitted.
-//           Must be exactly one of INFO WARNING ERROR FATAL QFATAL DFATAL
-#define LOG(severity) DP_INTERNAL_LOGGING_##severity.stream()
-
-// A command to LOG only if a condition is true. If the condition is false,
-// nothing is logged.
-// Example:
-//
-// LOG_IF(INFO, num_cookies > 10) << "Got lots of cookies";
-//
-// severity: the severity of the log message, one of LogSeverity. The
-//           FATAL severity will terminate the program after the log is emitted.
-// condition: the condition that determines whether to log the message.
-#define LOG_IF(severity, condition)                                           \
-  !(condition)                                                                \
-      ? (void)0                                                               \
-      : ::differential_privacy::base::logging_internal::LogMessageVoidify() & \
-            DP_INTERNAL_LOGGING_##severity.stream()
-
-// A LOG command with an associated verbosity level. The verbosity threshold
-// may be configured at runtime with set_vlog_level and InitLogging.
-//
-// VLOG statements are logged at INFO severity if they are logged at all.
-// The numeric levels are on a different scale than the severity levels.
-// Example:
-//
-//   VLOG(1) << "Print when VLOG level is set to be 1 or higher";
-//
-// level: the numeric level that determines whether to log the message.
-#define VLOG(level) \
-  LOG_IF(INFO, (level) <= ::differential_privacy::base::get_vlog_level())
-
-// Terminates the program with a fatal error if the specified condition is
-// false.
-//
-// Example:
-//   CHECK(!cheese.empty()) << "Out of Cheese";
-//
-//
-// Might produce a message like:
-//   "Check_failed: !cheese.empty() Out of Cheese"
-#define CHECK(condition) \
-  LOG_IF(FATAL, !(condition)) << ("Check failed: " #condition " ")
-
-namespace differential_privacy {
-namespace base {
-
-// This formats a value for a failing CHECK_XX statement.  Ordinarily,
-// it uses the definition for operator<<, with a few special cases below.
-template <typename T>
-inline void MakeCheckOpValueString(std::ostream *os, const T &v) {
-  (*os) << v;
-}
-
-// Overrides for char types provide readable values for unprintable
-// characters.
-template <>
-void MakeCheckOpValueString(std::ostream *os, const char &v);
-template <>
-void MakeCheckOpValueString(std::ostream *os, const signed char &v);
-template <>
-void MakeCheckOpValueString(std::ostream *os, const unsigned char &v);
-
-// We need an explicit specialization for std::nullptr_t.
-template <>
-void MakeCheckOpValueString(std::ostream *os, const std::nullptr_t &v);
-
-// A helper class for formatting "expr (V1 vs. V2)" in a CHECK_XX
-// statement.  See MakeCheckOpString for sample usage.
-class CheckOpMessageBuilder {
- public:
-  // Constructs an object to format a CheckOp message. This constructor
-  // initializes the message first with exprtext followed by " (".
-  //
-  // exprtext A std::string representation of the code in file at line.
-  explicit CheckOpMessageBuilder(const char *exprtext);
-  // Deletes "stream_".
-  ~CheckOpMessageBuilder();
-  // Gets the output stream for the first argument of the message.
-  std::ostream *ForVar1() { return stream_; }
-  // Gets the output stream for writing the argument of the message. This
-  // writes " vs. " to the stream first.
-  std::ostream *ForVar2();
-  // Gets the built std::string contents. The stream is finished with an added ")".
-  std::string *NewString();
-
- private:
-  std::ostringstream *stream_;
-};
-
-template <typename T1, typename T2>
-std::string *MakeCheckOpString(const T1 &v1, const T2 &v2,
-                               const char *exprtext) {
-  CheckOpMessageBuilder comb(exprtext);
-  MakeCheckOpValueString(comb.ForVar1(), v1);
-  MakeCheckOpValueString(comb.ForVar2(), v2);
-  return comb.NewString();
-}
-
-// Helper functions for CHECK_OP macro.
-// The (int, int) specialization works around the issue that the compiler
-// will not instantiate the template version of the function on values of
-// unnamed enum type - see comment below.
-//
-// name: an identifier that is the name of the comparison, such as
-//       Check_EQ or Check_NE.
-// op: the comparison operator, such as == or !=.
-#define DEFINE_CHECK_OP_IMPL(name, op)                                   \
-  template <typename T1, typename T2>                                    \
-  inline std::string *name##Impl(const T1 &v1, const T2 &v2,             \
-                                 const char *exprtext) {                 \
-    if (v1 op v2) return nullptr;                                        \
-    return MakeCheckOpString(v1, v2, exprtext);                          \
-  }                                                                      \
-  inline std::string *name##Impl(int v1, int v2, const char *exprtext) { \
-    return name##Impl<int, int>(v1, v2, exprtext);                       \
-  }
-
-// We use the full name Check_EQ, Check_NE, etc.
-//
-// This is to prevent conflicts when the file including logging.h provides its
-// own #defines for the simpler names EQ, NE, etc. This happens if, for
-// example, those are used as token names in a yacc grammar.
-DEFINE_CHECK_OP_IMPL(Check_EQ, ==)
-DEFINE_CHECK_OP_IMPL(Check_NE, !=)
-DEFINE_CHECK_OP_IMPL(Check_LE, <=)
-DEFINE_CHECK_OP_IMPL(Check_LT, <)
-DEFINE_CHECK_OP_IMPL(Check_GE, >=)
-DEFINE_CHECK_OP_IMPL(Check_GT, >)
-#undef DEFINE_CHECK_OP_IMPL
-
-// Function is overloaded for integral types to allow static const
-// integrals declared in classes and not defined to be used as arguments to
-// CHECK* macros. It's not encouraged though.
-template <typename T>
-inline const T &GetReferenceableValue(const T &t) {
-  return t;
-}
-
-
-inline char GetReferenceableValue(char t) { return t; }
-inline unsigned char GetReferenceableValue(unsigned char t) { return t; }
-inline signed char GetReferenceableValue(signed char t) { return t; }
-// NOLINTNEXTLINE(runtime/int)
-inline short GetReferenceableValue(short t) { return t; }
-// NOLINTNEXTLINE(runtime/int)
-inline unsigned short GetReferenceableValue(unsigned short t) { return t; }
-inline int GetReferenceableValue(int t) { return t; }
-inline unsigned int GetReferenceableValue(unsigned int t) { return t; }
-// NOLINTNEXTLINE(runtime/int)
-inline long GetReferenceableValue(long t) { return t; }
-// NOLINTNEXTLINE(runtime/int)
-inline unsigned long GetReferenceableValue(unsigned long t) { return t; }
-// NOLINTNEXTLINE(runtime/int)
-inline long long GetReferenceableValue(long long t) { return t; }
-// NOLINTNEXTLINE(runtime/int)
-inline unsigned long long GetReferenceableValue(unsigned long long t) {
-  return t;
-}
-
-// Compares val1 and val2 with op, and produces a LOG(FATAL) if false.
-//
-// name An identifier that is the name of the comparison, such as
-//        Check_EQ or Check_NE.
-// op: comparison operator, such as == or !=.
-// val1: first variable to be compared.
-// val2: second variable to be compared.
-#define DP_INTERNAL_CHECK_OP(name, op, val1, val2)                             \
-  while (std::unique_ptr<std::string> _result =                                     \
-             std::unique_ptr<std::string>(::differential_privacy::base::name##Impl( \
-                 ::differential_privacy::base::GetReferenceableValue(val1),    \
-                 ::differential_privacy::base::GetReferenceableValue(val2),    \
-                 #val1 " " #op " " #val2)))                                    \
-  ::differential_privacy::base::logging_internal::LogMessageFatal(             \
-      __FILE__, __LINE__, *_result)                                            \
-      .stream()
-
-// Produces a LOG(FATAL) unless val1 equals val2.
-#define CHECK_EQ(val1, val2) DP_INTERNAL_CHECK_OP(Check_EQ, ==, val1, val2)
-// Produces a LOG(FATAL) unless val1 does not equal to val2.
-#define CHECK_NE(val1, val2) DP_INTERNAL_CHECK_OP(Check_NE, !=, val1, val2)
-// Produces a LOG(FATAL) unless val1 is less than or equal to val2.
-#define CHECK_LE(val1, val2) DP_INTERNAL_CHECK_OP(Check_LE, <=, val1, val2)
-// Produces a LOG(FATAL) unless val1 is less than val2.
-#define CHECK_LT(val1, val2) DP_INTERNAL_CHECK_OP(Check_LT, <, val1, val2)
-// Produces a LOG(FATAL) unless val1 is greater than or equal to val2.
-#define CHECK_GE(val1, val2) DP_INTERNAL_CHECK_OP(Check_GE, >=, val1, val2)
-// Produces a LOG(FATAL) unless val1 is greater than val2.
-#define CHECK_GT(val1, val2) DP_INTERNAL_CHECK_OP(Check_GT, >, val1, val2)
-
-#define DCHECK(c) CHECK(c)
-// Another alias for CHECK that in the future may include more posix/errno
-// related data.
-#define PCHECK(c) CHECK(c)
-
-// Another alias for CHECK that in the future may log less verbosely.
-#define QCHECK(c) CHECK(c)
-
-#define DCHECK_EQ(a, b) CHECK_EQ(a, b)
-#define DCHECK_NE(a, b) CHECK_NE(a, b)
-#define DCHECK_LE(a, b) CHECK_LE(a, b)
-#define DCHECK_LT(a, b) CHECK_LT(a, b)
-#define DCHECK_GE(a, b) CHECK_GE(a, b)
-#define DCHECK_GT(a, b) CHECK_GT(a, b)
-
-#define DLOG(c) LOG(c)
-
-// Gets the verbosity threshold for VLOG. A VLOG command with a level greater
-// than this will be ignored.
-int get_vlog_level();
-
-// Gets the log directory that was specified when initialized.
-std::string get_log_directory();
-
-// Initializes minimal logging library.
-//
-// This should be called in main().
-//
-// directory: log file directory.
-// file_name: name of the log file (recommend this be initialized with argv[0]).
-// level: verbosity threshold for VLOG commands. A VLOG command with
-//        a level equal to or lower than it will be logged.
-// Returns true if initialized successfully. Behavior is undefined false.
-bool InitLogging(const char *directory, const char *file_name, int level);
-
-namespace logging_internal {
-
-// Class representing a log message created by a log macro.
-class LogMessage {
- public:
-  // Constructs a new message with INFO severity.
-  //
-  // file: source file that produced the log.
-  // line: source code line that produced the log.
-  LogMessage(const char *file, int line);
-
-  // Constructs a new message with the specified severity.
-  //
-  // file: source file that produced the log.
-  // line: source code line that produced the log.
-  // severity: severity level of the log.
-  LogMessage(const char *file, int line, absl::LogSeverity severity);
-
-  // Constructs a log message with additional text that is provided by CHECK
-  // macros.  Severity is implicitly FATAL.
-  //
-  // file: source file that produced the log.
-  // line: source code line that produced the log.
-  // result: result message of the failed check.
-  LogMessage(const char *file, int line, const std::string &result);
-
-  // The destructor flushes the message.
-  ~LogMessage();
-
-  LogMessage(const LogMessage &) = delete;
-  void operator=(const LogMessage &) = delete;
-
-  // Gets a reference to the underlying std::string stream.
-  std::ostream &stream() { return stream_; }
-
- protected:
-  void Flush();
-
- private:
-  void Init(const char *file, int line, absl::LogSeverity severity);
-
-  // Sends the message to print.
-  void SendToLog(const std::string &message_text);
-
-  // stream_ reads all the input messages into a stringstream, then it's
-  // converted into a std::string in the destructor for printing.
-  std::ostringstream stream_;
-  const absl::LogSeverity severity_;
-};
-
-// This class is used just to take an ostream type and make it a void type to
-// satisfy the ternary operator in LOG_IF.
-// operator& is used because it has precedence lower than << but higher than :?
-class LogMessageVoidify {
- public:
-  void operator&(const std::ostream &) {}
-};
-
-// Default LogSeverity FATAL version of LogMessage.
-// Identical to LogMessage(..., FATAL), but see comments on destructor.
-class LogMessageFatal : public LogMessage {
- public:
-  // Constructs a new message with FATAL severity.
-  //
-  // file: source file that produced the log.
-  // line: source code line that produced the log.
-  LogMessageFatal(const char *file, int line)
-    : LogMessage(file, line, absl::LogSeverity::kFatal) {}
-
-  // Constructs a message with FATAL severity for use by CHECK macros.
-  //
-  // file: source file that produced the log.
-  // line: source code line that produced the log.
-  // result: result message when check fails.
-  LogMessageFatal(const char *file, int line, const std::string &result)
-      : LogMessage(file, line, result) {}
-
-  // Suppresses warnings in some cases, example:
-  // if (impossible)
-  //   LOG(FATAL)
-  // else
-  //   return 0;
-  // which would otherwise yield the following compiler warning.
-  // "warning: control reaches end of non-void function [-Wreturn-type]"
-  ABSL_ATTRIBUTE_NORETURN ~LogMessageFatal();
-};
-
-}  // namespace logging_internal
-
-}  // namespace base
-}  // namespace differential_privacy
-
-#endif  // DIFFERENTIAL_PRIVACY_BASE_LOGGING_H_
diff --git a/base/testing/BUILD b/base/testing/BUILD
index 8d6a853..204fbbd 100644
--- a/base/testing/BUILD
+++ b/base/testing/BUILD
@@ -28,7 +28,8 @@ cc_library(
     testonly = 1,
     hdrs = ["proto_matchers.h"],
     deps = [
-        "//base:logging",
+        "@com_google_absl//absl/log:log",
+        "@com_google_absl//absl/log:check",
         "@com_google_absl//absl/strings",
         "@com_google_googletest//:gtest_main",
         "@com_google_protobuf//:protobuf",
diff --git a/base/testing/proto_matchers.h b/base/testing/proto_matchers.h
index 15f1a0c..9fd66fb 100644
--- a/base/testing/proto_matchers.h
+++ b/base/testing/proto_matchers.h
@@ -24,7 +24,8 @@
 #include "gmock/gmock.h"
 #include "gtest/gtest.h"
 #include "absl/strings/string_view.h"
-#include "base/logging.h"
+#include "absl/log/log.h"
+#include "absl/log/check.h"

 namespace differential_privacy {
 namespace base {
diff --git a/testing/BUILD b/testing/BUILD
index 73197c2..366a2d6 100644
--- a/testing/BUILD
+++ b/testing/BUILD
@@ -21,7 +21,8 @@ cc_library(
     name = "sequence",
     hdrs = ["sequence.h"],
     deps = [
-        "//base:logging",
+        "@com_google_absl//absl/log:log",
+        "@com_google_absl//absl/log:check",
         "@com_google_absl//absl/memory",
         "@com_google_absl//absl/random:distributions",
     ],
@@ -47,7 +48,8 @@ cc_library(
         ":sequence",
         "//algorithms:algorithm",
         "//algorithms:util",
-        "//base:logging",
+        "@com_google_absl//absl/log:log",
+        "@com_google_absl//absl/log:check",
         "//proto:util-lib",
         "@com_google_absl//absl/container:flat_hash_map",
         "@com_google_absl//absl/hash",
@@ -60,7 +62,8 @@ cc_library(
     name = "density_estimation",
     hdrs = ["density_estimation.h"],
     deps = [
-        "//base:logging",
+        "@com_google_absl//absl/log:log",
+        "@com_google_absl//absl/log:check",
         "@com_google_absl//absl/status",
         "@com_google_absl//absl/status:statusor",
         "@com_google_absl//absl/strings",
@@ -95,7 +98,8 @@ cc_test(
     srcs = ["density_estimation_test.cc"],
     deps = [
         ":density_estimation",
-        "//base:logging",
+        "@com_google_absl//absl/log:log",
+        "@com_google_absl//absl/log:check",
         "//base/testing:status_matchers",
         "@com_google_cc_differential_privacy//base:status",
         "@com_google_googletest//:gtest_main",
@@ -110,7 +114,8 @@ cc_library(
     deps = [
         "//algorithms:rand",
         "//algorithms:util",
-        "//base:logging",
+        "@com_google_absl//absl/log:log",
+        "@com_google_absl//absl/log:check",
         "@com_google_absl//absl/container:flat_hash_map",
         "@com_google_absl//absl/random:distributions",
         "@com_google_absl//absl/status:statusor",
diff --git a/testing/density_estimation.h b/testing/density_estimation.h
index c4f6c41..56da9f5 100644
--- a/testing/density_estimation.h
+++ b/testing/density_estimation.h
@@ -20,7 +20,8 @@
 #include <limits>
 #include <numeric>

-#include "base/logging.h"
+#include "absl/log/log.h"
+#include "absl/log/check.h"
 #include "absl/status/status.h"
 #include "absl/status/statusor.h"
 #include "absl/strings/str_cat.h"
diff --git a/testing/density_estimation_test.cc b/testing/density_estimation_test.cc
index e1e2fa0..20eb888 100644
--- a/testing/density_estimation_test.cc
+++ b/testing/density_estimation_test.cc
@@ -18,7 +18,8 @@

 #include <limits>

-#include "base/logging.h"
+#include "absl/log/log.h"
+#include "absl/log/check.h"
 #include "base/testing/status_matchers.h"
 #include "gmock/gmock.h"
 #include "gtest/gtest.h"
diff --git a/testing/sequence.h b/testing/sequence.h
index 2a3762b..45f618a 100644
--- a/testing/sequence.h
+++ b/testing/sequence.h
@@ -21,7 +21,8 @@
 #include <memory>
 #include <vector>

-#include "base/logging.h"
+#include "absl/log/log.h"
+#include "absl/log/check.h"
 #include "absl/memory/memory.h"
 #include "absl/random/distributions.h"

diff --git a/testing/statistical_tests_utils.h b/testing/statistical_tests_utils.h
index 3379654..d87b76c 100644
--- a/testing/statistical_tests_utils.h
+++ b/testing/statistical_tests_utils.h
@@ -21,7 +21,8 @@
 #include <functional>
 #include <iostream>

-#include "base/logging.h"
+#include "absl/log/log.h"
+#include "absl/log/check.h"
 #include "google/protobuf/text_format.h"
 #include "absl/container/flat_hash_map.h"
 #include "absl/status/statusor.h"
diff --git a/testing/stochastic_tester.h b/testing/stochastic_tester.h
index a6a510f..6275778 100644
--- a/testing/stochastic_tester.h
+++ b/testing/stochastic_tester.h
@@ -24,7 +24,8 @@
 #include <stack>
 #include <type_traits>

-#include "base/logging.h"
+#include "absl/log/log.h"
+#include "absl/log/check.h"
 #include "absl/container/flat_hash_map.h"
 #include "absl/hash/hash.h"
 #include "absl/status/statusor.h"
